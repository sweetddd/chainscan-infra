apiVersion: apps/v1
kind: Deployment
metadata:
  name: $APP_NAME-rinkeby-production
  namespace: paas
spec:
  replicas: 0
  selector:
    matchLabels:
      app: $APP_NAME-rinkeby-production
  template:
    metadata:
      labels:
        app: $APP_NAME-rinkeby-production
    spec:
      containers:
      - name: $APP_NAME-rinkeby-production
        image:  $REGISTRY/$APP_NAME:SNAPSHOT-$BUILD_NUMBER
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9196
            httpHeaders:
              - name: X-Custom-Header
                value: Awesome
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 15
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            cpu: 2
            memory: 2Gi
          limits:
            cpu: 2
            memory: 8Gi
        volumeMounts:
        - name: host-time
          mountPath: /etc/localtime
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9196
        env:
          - name: "spring.profiles.active"
            value: "prd"
          - name: TZ
            value: UTC
          - name: "evm.chain.rinkebyUrl"
            value: "https://vmtestnet.chainfra.io/v1/df8371a1d8cbc835147df382bb1144a9"
          - name: "nacos.config.server-addr"
            valueFrom:
              configMapKeyRef:
                name: nacos-config
                key: nacos.config.server-addr
          - name: "spring.datasource.chainscan.jdbc-url"
            valueFrom:
              secretKeyRef:
                name: database-rinkeby
                key: url
          - name: "spring.datasource.chainscan.username"
            valueFrom:
              secretKeyRef:
                name: database-rinkeby
                key: username
          - name: "spring.datasource.chainscan.password"
            valueFrom:
              secretKeyRef:
                name: database-rinkeby
                key: password
          - name: "watcher.rocketmq.server.addr"
            valueFrom:
              configMapKeyRef:
                name: rocketmq-config
                key: rocketmq.server.addr
          - name: "coin.ether.api"
            valueFrom:
              configMapKeyRef:
                name: network-config
                key: ether.rpc.api
          - name: "coin.dtx.api"
            valueFrom:
              configMapKeyRef:
                name: network-config
                key: dtx.rpc.api
          - name: "evm.vmChainUrl"
            valueFrom:
              configMapKeyRef:
                name: network-config
                key: dtx.rpc.api
          - name: "watcher.rinkebyUrl"
            valueFrom:
              configMapKeyRef:
                name: network-config
                key: ether.rpc.api
          - name: "watcher.vmChainUrl"
            valueFrom:
              configMapKeyRef:
                name: network-config
                key: ether.rpc.api
          - name: "watcher.chain.scanStep"
            value: 200
          - name: "watcher.chain.processStep"
            value: 200
          - name: "watcher.chain.chainId"
            value: 4
          - name: "watcher.chain.batchInsertSize"
            value: 30
          - name: "watcher.chain.chainType"
            value: EVM_PoW
          - name: "watcher.notify.template"
            value: RINKEBY
      volumes:
      - name: host-time
        hostPath:
          path: /etc/localtime
      imagePullSecrets:
      - name: regcred
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - $APP_NAME-dtx-production
                      - $APP_NAME-rinkeby-production
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "eks.amazonaws.com/nodegroup"
                    operator: In
                    values:
                      - "ex-prd"
